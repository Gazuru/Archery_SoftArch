plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    id "org.openapi.generator" version "6.1.0"
}

group = 'hu.bme.aut'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '18'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repo1.maven.org/maven2" }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.2'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.3'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

compileJava.dependsOn tasks.openApiGenerate

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$projectDir/openapi.yaml".toString()
    outputDir = "$projectDir/generated/openapi".toString()
    library = "spring-boot"
    generateModelTests = false
    generateModelDocumentation = false
    generateApiTests = false
    generateApiDocumentation = false
    modelPackage = "hu.bme.aut.archerybe.genapi.business.dto"
    apiPackage = "hu.bme.aut.archerybe.genapi.business.controller"
    configOptions = [
            oas3               : "true",
            useSpringController: "true",
            useSpringFox       : "false",
            interfaceOnly      : "true"
    ]
}

sourceSets.main.java {
    srcDirs 'src/main/java'
    srcDirs 'generated/openapi/src/main/java'
}

tasks.named('test') {
    useJUnitPlatform()
}
